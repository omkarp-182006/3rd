Write a program to input marks of students in 5 subjects, calculate total, average, and grade using methods and handle invalid marks using exception handling. 

 

import java.util.*; 
 
public class MarksCalculator { 
    static char calculateGrade(double avg) { 
        if (avg >= 90) return 'A'; 
        else if (avg >= 75) return 'B'; 
        else if (avg >= 60) return 'C'; 
        else if (avg >= 45) return 'D'; 
        else return 'F'; 
    } 
 
    public static void main(String[] args) { 
        Scanner sc = new Scanner(System.in); 
        int marks[] = new int[5]; 
        int total = 0; 
 
        try { 
            for (int i = 0; i < 5; i++) { 
                System.out.println("Enter marks for subject " + (i + 1) + ": "); 
                marks[i] = sc.nextInt(); 
                if (marks[i] < 0 || marks[i] > 100) 
                    throw new IllegalArgumentException("Marks must be between 0 and 100."); 
                total += marks[i]; 
            } 
 
            double avg = total / 5.0; 
            System.out.println("\nTotal = " + total); 
            System.out.println("Average = " + avg); 
            System.out.println("Grade = " + calculateGrade(avg)); 
 
        } catch (Exception e) { 
            System.out.println("Error: " + e.getMessage()); 
        } 
    } 
} 
Accept item names, price, and quantity. Calculate total, apply a discount if total > 2000, and display formatted bill using methods. 

 

import java.util.*; 
 
public class BillCalculator { 
    static double calculateTotal(double price, int qty) { 
        return price * qty; 
    } 
 
    static double applyDiscount(double total) { 
        if (total > 2000) total *= 0.9; // 10% discount 
        return total; 
    } 
 
    public static void main(String[] args) { 
        Scanner sc = new Scanner(System.in); 
        System.out.println("Enter item name: "); 
        String item = sc.nextLine(); 
        System.out.println("Enter price: "); 
        double price = sc.nextDouble(); 
        System.out.println("Enter quantity: "); 
        int qty = sc.nextInt(); 
 
        double total = calculateTotal(price, qty); 
        double finalBill = applyDiscount(total); 
 
        System.out.println("\n====== BILL ======"); 
        System.out.println("Item: " + item); 
        System.out.println("Total: ₹" + total); 
        System.out.println("Payable after discount: ₹" + finalBill); 
    } 
} 
 

 

Take a sentence and count the number of words and occurrences of a specific word using arrays and string methods. 

 

import java.util.*; 
 
public class WordCounter { 
    public static void main(String[] args) { 
        Scanner sc = new Scanner(System.in); 
        System.out.println("Enter a sentence: "); 
        String sentence = sc.nextLine(); 
 
        String[] words = sentence.split("\\s+"); 
        System.out.println("Total words: " + words.length); 
 
        System.out.print("Enter word to count occurrences: "); 
        String target = sc.nextLine(); 
        int count = 0; 
        for (String w : words) 
            if (w.equalsIgnoreCase(target)) 
                count++; 
 
        System.out.println("Occurrences of '" + target + "': " + count); 
    } 
} 

 
Check password strength: Length ≥ 8, contains uppercase, lowercase, digit, and symbol, throw exception if invalid. 

 

import java.util.*; 

class WeakPasswordException extends Exception {  

WeakPasswordException(String msg) { super(msg); }  

} 

public class PasswordStrength {  

static void validate(String p) throws WeakPasswordException {  

if (p.length() < 8 ||  

!p.matches(".[A-Z].") ||  

!p.matches(".[a-z].") ||  

!p.matches(".\d.") ||  

!p.matches(".[!@#$%^&()].*"))  

throw new WeakPasswordException("Password must be ≥8 chars with uppercase, lowercase, digit, and symbol.");  

} 

public static void main(String[] args) { 
    Scanner sc = new Scanner(System.in); 
    System.out.print("Enter password: "); 
    try { 
        validate(sc.nextLine()); 
        System.out.println(" Strong Password!"); 
    } catch (WeakPasswordException e) { 
        System.out.println("Weak Password! "); 
    } 
} 
  

} 

Simulate ATM operations like deposit, withdraw, and check balance. Use methods for each operation and handle insufficient balance with exception handling. 

 

import java.util.*; 

  

class InsufficientBalanceException extends Exception { 

    InsufficientBalanceException(String msg) { super(msg); } 

} 

  

public class ATMSimulator { 

    static double balance = 1000; 

  

    static void deposit(double amt) { balance += amt; System.out.println("Deposited ₹" + amt + " | Balance: ₹" + balance); } 

 

  

    static void withdraw(double amt) throws InsufficientBalanceException { 

        if (amt > balance) throw new InsufficientBalanceException(" Insufficient Balance!"); 

        balance -= amt; 

        System.out.println("Withdrew ₹" + amt + " | Balance: ₹" + balance); 

    } 

  

    public static void main(String[] args) { 

        Scanner sc = new Scanner(System.in); 

        while (true) { 

            System.out.print("\n1.Deposit  2.Withdraw  3.Check Balance  4.Exit\nEnter choice: "); 

            try { 

                switch (sc.nextInt()) { 

                    case 1 -> { System.out.print("Amount: "); deposit(sc.nextDouble()); } 

                    case 2 -> { System.out.print("Amount: "); withdraw(sc.nextDouble()); } 

                    case 3 -> System.out.println("Current Balance: ₹" + balance); 

                    case 4 -> { System.out.println("Thank you!"); return; } 

                    default -> System.out.println("Invalid choice!"); 

                } 

            } catch (Exception e) { 

                System.out.println(e.getMessage()); 

                sc.nextLine();  

            } 

        } 

    } 

} 

 

 

 

Accept basic salary and compute HRA, DA, PF, and gross salary. Display results using methods and handle invalid inputs with exceptions. 

 

import java.util.*; 
 
public class SalaryCalculator { 
    static void computeSalary(double basic) { 
        double hra = 0.2 * basic; 
        double da = 0.1 * basic; 
        double pf = 0.05 * basic; 
        double gross = basic + hra + da - pf; 
 
        System.out.println("\nHRA = " + hra); 
        System.out.println("DA = " + da); 
        System.out.println("PF = " + pf); 
        System.out.println("Gross Salary = " + gross); 
    } 
 
    public static void main(String[] args) { 
        Scanner sc = new Scanner(System.in); 
        try { 
            System.out.print("Enter basic salary: "); 
            double basic = sc.nextDouble(); 
            if (basic <= 0) 
                throw new IllegalArgumentException("Salary must be positive!"); 
            computeSalary(basic); 
        } catch (Exception e) { 
            System.out.println("Error: " + e.getMessage()); 
        } 
    } 
} 
 

 

Accept total bill and membership type (Silver/Gold/Platinum) and apply discounts accordingly using if-else and methods. 

 

import java.util.Scanner; 

  

public class MembershipDiscount { 

  

    static double applyDiscount(double bill, String type) { 

        double discount = 0; 

        if (type.equalsIgnoreCase("Silver")) discount = 0.05; 

        else if (type.equalsIgnoreCase("Gold")) discount = 0.10; 

        else if (type.equalsIgnoreCase("Platinum")) discount = 0.15; 

        return bill - (bill * discount); 

    } 

  

    public static void main(String[] args) { 

        Scanner sc = new Scanner(System.in); 

  

        System.out.println("Enter total bill: "); 

        double bill = sc.nextDouble(); 

  

        System.out.println("Enter membership type (Silver/Gold/Platinum): "); 

        String type = sc.next(); 

  

        double finalBill = applyDiscount(bill, type); 

        System.out.println("Final bill after discount: " + finalBill); 

    } 

} 

 

For ‘n’ products, store product name, price, and quantity in arrays. Calculate total stock value and handle out-of-stock errors via exception handling. 

 

import java.util.Scanner; 

  

class OutOfStockException extends Exception { 

    public OutOfStockException(String message) { 

        super(message); 

    } 

} 

  

public class StockManager { 

    public static void main(String[] args) { 

        Scanner sc = new Scanner(System.in); 

  

        System.out.println("Enter number of products: "); 

        int n = sc.nextInt(); 

  

        String[] names = new String[n]; 

        double[] prices = new double[n]; 

        int[] quantities = new int[n]; 

  

        for (int i = 0; i < n; i++) { 

            System.out.println("Enter product " + (i + 1) + " name: "); 

            names[i] = sc.next(); 

            System.out.println("Enter price: "); 

            prices[i] = sc.nextDouble(); 

            System.out.println("Enter quantity: "); 

            quantities[i] = sc.nextInt(); 

        } 

 	double totalValue = 0; 

        for (int i = 0; i < n; i++) { 

            try { 

                if (quantities[i] <= 0) 

                    throw new OutOfStockException(names[i] + " is out of stock!"); 

                totalValue += prices[i] * quantities[i]; 

            } catch (OutOfStockException e) { 

                System.out.println(e.getMessage()); 

            } 

        } 

 System.out.println("Total stock value: " + totalValue); 

    } 

} 

Process a coffee order: take customer size choice, calculate total price based on size and add-ons, and handle a list of 5 drink types. 

import java.util.Scanner; 

  

public class CoffeeOrder { 

    public static void main(String[] args) { 

        Scanner sc = new Scanner(System.in); 

        String[] drinks = {"Espresso", "Latte", "Cappuccino", "Mocha", "Americano"}; 

        double[] prices = {100, 120, 150, 130, 110}; 

  

        System.out.println("Available drinks:"); 

        for (String d : drinks) System.out.println(d); 

  

        System.out.println("Choose drink (0-4): "); 

        int choice = sc.nextInt(); 

  

        System.out.println("Size (S/M/L): "); 

        char size = sc.next().toUpperCase().charAt(0); 

  

        System.out.println("Add-ons price: "); 

        double addons = sc.nextDouble(); 

  

        double total = prices[choice] + addons; 

        if (size == 'M') total += 20; 

        else if (size == 'L') total += 40; 

  

        System.out.println("Total price: " + total); 

    } 

} 

Create a method that accepts two numbers and an operation symbol. Use a switch to perform and return the result of addition, subtraction, multiplication, or division. 

import java.util.Scanner; 

public class Calculator {  

static double calculate(double a, double b, char op) {  

return switch(op) {  

case '+' -> a + b;  

case '-' -> a - b;  

case '*' -> a * b;  

case '/' -> b != 0 ? a / b : Double.NaN;  

default -> Double.NaN;  

};  

} 

public static void main(String[] args) { 
    Scanner sc = new Scanner(System.in); 
    System.out.println("Enter two numbers: "); 
    double x = sc.nextDouble(), y = sc.nextDouble(); 
    System.out.println("Enter operation (+,-,*,/): "); 
    char op = sc.next().charAt(0); 
    System.out.println("Result: " + calculate(x, y, op)); 
} 
  

} 

Input a string and count vowels, consonants, digits, and special characters using loops and conditionals. 

import java.util.Scanner; 

public class CountChars { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.print("Enter a string: "); String s = sc.nextLine(); 

   int vowels=0, consonants=0, digits=0, special=0; 
    for (char c : s.toLowerCase().toCharArray()) { 
        if ("aeiou".indexOf(c) != -1) vowels++; 
        else if (c >= 'a' && c <= 'z') consonants++; 
        else if (c >= '0' && c <= '9') digits++; 
        else special++; 
    } 
    System.out.println("Vowels:"+vowels+", Consonants:"+consonants+", Digits:"+digits+", Special:"+special); 
} 
  

} Problem 4: Customer Accounts Question: For n customers, input name, account type, and balance. Apply 4% interest for savings and 6% for fixed accounts, then display updated balances. 

java Copy code import java.util.Scanner; 

public class CustomerInterest { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.print("Number of customers: "); int n = sc.nextInt(); String[] names = new String[n], types = new String[n]; double[] balances = new double[n]; 

   for (int i=0; i<n; i++) { 
        System.out.print("Name: "); names[i] = sc.next(); 
        System.out.print("Account type (Savings/Fixed): "); types[i] = sc.next(); 
        System.out.print("Balance: "); balances[i] = sc.nextDouble(); 
 
        if (types[i].equalsIgnoreCase("Savings")) balances[i] *= 1.04; 
        else if (types[i].equalsIgnoreCase("Fixed")) balances[i] *= 1.06; 
    } 
 
    for (int i=0; i<n; i++) 
        System.out.println(names[i] + " updated balance: " + balances[i]); 
} 
  

} Problem 5: Celsius to Fahrenheit Question: Read 5 daily temperatures into an array. Use a loop and a method to convert each temperature from Celsius to Fahrenheit, displaying both. 

java Copy code import java.util.Scanner; 

public class TempConvert { static double toFahrenheit(double c) { return c * 9/5 + 32; } 

public static void main(String[] args) { 
    Scanner sc = new Scanner(System.in); 
    double[] temps = new double[5]; 
    for (int i=0; i<5; i++) { 
        System.out.print("Enter temp "+(i+1)+": "); 
        temps[i] = sc.nextDouble(); 
    } 
    for (double c : temps) 
        System.out.println(c+"C = "+toFahrenheit(c)+"F"); 
} 
  

} Problem 6: Electricity Bill Question: Accept number of units consumed and calculate bill based on slab rates using conditionals and methods. 

java Copy code import java.util.Scanner; 

public class ElectricityBill { static double calcBill(int units) { if (units <= 100) return units5; else if (units <= 200) return 1005 + (units-100)7; else return 1005 + 100*7 + (units-200)*10; } 

public static void main(String[] args) { 
    Scanner sc = new Scanner(System.in); 
    System.out.print("Enter units: "); 
    int u = sc.nextInt(); 
    System.out.println("Bill: " + calcBill(u)); 
} 
  

} Problem 7: Palindrome Check Question: Input a string and check if it’s a palindrome (ignore case and spaces). Use string methods and exception handling. 

java Copy code import java.util.Scanner; 

public class PalindromeCheck { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.print("Enter string: "); String s = sc.nextLine().replaceAll("\s", "").toLowerCase(); 

   try { 
        String rev = new StringBuilder(s).reverse().toString(); 
        System.out.println(rev.equals(s) ? "Palindrome" : "Not Palindrome"); 
    } catch (Exception e) { 
        System.out.println("Error: " + e.getMessage()); 
    } 
} 
  

} Problem 8: Character Replacement Question: Read a word (String). Use a loop and a switch on each character to replace 'a' with '4', 'e' with '3', and 'o' with '0'. 

java Copy code import java.util.Scanner; 

public class ReplaceChars { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.print("Enter a word: "); String s = sc.next(); 

   StringBuilder sb = new StringBuilder(); 
    for (char c : s.toCharArray()) { 
        switch(c) { 
            case 'a': sb.append('4'); break; 
            case 'e': sb.append('3'); break; 
            case 'o': sb.append('0'); break; 
            default: sb.append(c); 
        } 
    } 
    System.out.println("Modified word: " + sb); 
} 
  

} 

 

 